version: '3.8'

services:
    nginx:
        container_name: ${PROJECT_NAME}_WEB
        networks:
            - default
            - project-network
        image: nginx:${NGINX_VERSION}
        restart: always
        volumes:
            - ./docker/nginx/conf.d:/etc/nginx/conf.d/
            - ./app:/var/www/app/
        env_file:
            - .env-app
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.${PROJECT_NAME}_NGINX.loadbalancer.server.port=80"
            - "traefik.http.routers.${PROJECT_NAME}_NGINX.rule=Host(`${DOMAIN}.traefik.me`)"
            - "traefik.http.routers.${PROJECT_NAME}_NGINX-tls.tls.domains[0].main=${DOMAIN}.traefik.me"
            - "traefik.http.routers.${PROJECT_NAME}_NGINX-tls.tls.domains[0].sans=*.${DOMAIN}.traefik.me"
            - "traefik.http.routers.${PROJECT_NAME}_NGINX.tls=true"

    php:
        container_name: ${PROJECT_NAME}_PHP
        networks:
            - project-network
            - default
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
            target: "${BUILD_TARGET:-app}"
            args:
                USER_ID: '${USER_ID:-1000}'
                GROUP_ID: '${GROUP_yID:-1000}'
                USER: '${USER:-User}'
        volumes:
            - ./app:/var/www/app
            - ./docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
            - ./docker/php/init.sh:/var/www/app/init.sh:ro
            - ./docker/php/conf.d/custom.ini:/usr/local/etc/php/conf.d/custom.ini
        env_file:
            - .env-app
        # ports:
        #     - 80:80
        depends_on:
            - pgsql
        environment:
            # See https://xdebug.org/docs/all_settings#mode
            XDEBUG_MODE: "${XDEBUG_MODE:-off}"

    pgsql:
        image: oroinc/pgsql:13.7-1-alpine
        networks:
            - project-network
            - default
        ports:
            - 5432:5432
        labels:
            com.symfony.server.service-prefix: ORO_DB
        environment:
            POSTGRES_USER: ${POSTGRESQL_USER}
            POSTGRES_DB: ${POSTGRESQL_DATABASE}
            POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
        volumes:
            - ./pgsql:/var/lib/postgresql/data
        healthcheck:
            test: "pg_isready -U$${POSTGRES_USER} -d$${POSTGRES_DB}"
            interval: 5s
            timeout: 30s
            start_period: 40s
        restart: on-failure
    phpmyadmin:
        container_name: ${PROJECT_NAME}_PMA
        networks:
            - default
            - project-network
        image: phpmyadmin/phpmyadmin
        restart: on-failure
        environment:
            PMA_ARBITRARY: 1
            PMA_HOST: "${DOMAIN}.traefik.me"
            PMA_PORT: 5432
            POSTGRES_USER: ${POSTGRESQL_USER}/pma"
            POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
        env_file:
            - .env-app
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}_phpmyadmin.rule=Host(`${DOMAIN}.traefik.me`) && PathPrefix(`/pma`)"
            - "traefik.http.services.${PROJECT_NAME}_phpmyadmin.loadbalancer.server.port=80"
            - "traefik.http.routers.${PROJECT_NAME}_phpmyadmin.tls=true"
            - "traefik.http.routers.${PROJECT_NAME}_phpmyadmin.middlewares=phpmyadmin"
            - "traefik.http.middlewares.phpmyadmin.stripprefix.prefixes=/pma"

networks:
    default:
        name: ${NETWORK_NAME}
    project-network:
        name: ${PROJECT_NAME}-NETWORK
        internal: true

volumes:
    pgsql:
        name: ${PROJECT_NAME}_pgsql_data1
